#include <iostream>

using namespace std;

int main() {
    //PATTERNS//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////****
    //****
    //****
    //****
    //****
//    int n;
//    cout << "how many number of rows you wanted - ";
//    cin >> n;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < n; col++){
//            cout << "* ";
//        }cout << endl;
//    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //111
    //222
    //333
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col<n; col++){
//            cout <<row +1;
//        }cout << endl;
//    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//1 2 3 4
//1 2 3 4
//1 2 3 4
//1 2 3 4
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < n; col++){
//            cout << col + 1 ;
//        }cout << endl;
//    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//1 2 3
//4 5 6
//7 8 9

//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for (int row = 0; row < n; row++) {
//        for (int col = 0; col < n; col++) {
//            cout << (n * row) + (col + 1);
//            cout << " ";
//        }
//        cout << endl;
//    }

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//9 8 7
//6 5 4
//3 2 1
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < n; col++){
//            cout << (n*n) - ((n*row) + (1*col));
//            cout << " ";
//        }cout << endl;
//    }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//*
//**
//***
//****
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int star = 0; star < row + 1; star++){
//            cout << "* ";
//        }
//
//        cout << endl;
//    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* * * * *
//* * * *
//* * *
//* *
//*
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < n - row; col++){
//            cout << "*";
//        }cout << endl;
//    }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//* * * * *
//  * * * *
//    * * *
//      * *
//        *

//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int space = 0; space < row + 1; space++){
//            cout << " ";
//        }
//        for(int star = 0; star < n - row; star++){
//            cout << "*";
//        }cout << endl;
//    }




//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//1
//2 2
//3 3 3
//4 4 4 4
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < row + 1; col++){
//            cout << row + 1 ;
//        }cout << endl;
//    }
/////////////////////////////////////////////////////////////////////////////////
//1
//2 *2
//3 *3 *3
//4 *4 *4 *4
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < row + 1; col++){
//            if(col == 0){
//                cout << row + 1 ;
//            }else{
//                cout << "*" + to_string(row + 1) ;
//            }
//
//        }cout << endl;
//    }

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//1
//2 3
//4 5 6
//7 8 9 10
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < row + 1; col++){
//            cout << (row + 1) - col;
//        }cout << endl;
//    }

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//   *
//  * *
// * * *
//* * * *

//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int space = 0; space < n - (row + 1); space++){
//            cout << " ";
//        }
//        for(int star = 0; star < row + 1; star++){
//            cout << "* ";
//        }cout << endl;
//    }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//   *
//  **
// *  *
//*   *
//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int space = 0; space < n - (row + 1); space++) {
//            cout << " ";
//        }
//        for(int star = 0; star < row + 1; star++){
//            if(star == 0 || star == row){
//                cout << "* ";
//            }else{
//                cout << "  ";
//            }
//        }cout << endl;
//    }
//////////////////////////////////////////////////////////// FULL HOLLOW DIAMOND ////////////////////////////////////////////////////////////////////////////////////////////////////////////



//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int space = 0; space < n - (row + 1); space++) {
//            cout << " ";
//        }
//        for(int star = 0; star < row + 1; star++){
//            if(star == 0 || star == row){
//                cout << "* ";
//            }else{
//                cout << "  ";
//            }
//        }cout << endl;
//    }
//    for(int row = 0; row < n; row++){
//        for(int space = 0; space < row; space++){
//            cout << " ";
//        }
//        for(int star = 0; star < n - row; star++){
//            if(star == 0 || star == (n - row) - 1){
//                cout << "* ";
//            }else{
//                cout << "  ";
//            }
//        }cout << endl;
//    }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



//    int n;
//    cout << "how many rows you need - ";
//    cin >> n;
//    cout << endl;
//    for(int row = 0; row < n; row++){
//        for(int col = 0; col < n - row; col++){
//            cout << "* ";
//        }
//
//        for(int space = 0; space <2 * row + 1; space++) {
//            cout << "  ";
//        }
//
//        for(int col = 0; col < n - row; col++){
//            cout << "* ";
//        }
//        cout << endl;
//    }
///////////////////////////////////////////////////////////////////////////////////








































































































































































































































































































































































































































}
